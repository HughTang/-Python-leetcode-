#
# @lc app=leetcode.cn id=406 lang=python3
#
# [406] 根据身高重建队列
#

# @lc code=start
class Solution:
    # 解题思路：
    # 本题有两个维度，h和k，看到这种题目一定要想如何确定一个维度，然后在按照另一个维度重新排列。此题与[135. 分发糖果]有些相似.
    # 注意：如果两个维度一起考虑一定会顾此失彼。
    # （1）如果按照k来从小到大排序：排完之后，会发现k的排列并不符合条件，身高也不符合条件，两个维度哪一个都没确定下来。
    # （2）如果按照身高h来排序：身高一定是从大到小排（身高相同的话则k小的站前面），让高个子在前面。
    # 此时我们可以确定一个维度了，就是身高，前面的节点一定都比本节点高！那么只需要按照k为下标重新插入队列就可以了
    # 按照身高排序之后，优先按身高高的people的k来插入，后序插入节点也不会影响前面已经插入的节点，最终按照k的规则完成了队列。
    # 
    # 贪心思想：
    # 在按照身高从大到小排序后：
    # 局部最优：优先按身高高的people的k来插入。插入操作过后的people满足队列属性
    # 全局最优：最后都做完插入操作，整个队列满足题目队列属性
    # 局部最优可推出全局最优，找不出反例，因此适合贪心。
    def reconstructQueue(self, people: List[List[int]]) -> List[List[int]]:
        people.sort(key = lambda x: (-x[0], x[1]))
        ans = list()
        for p in people:
            ans.insert(p[1], p)
        return ans
# @lc code=end

